.env {
  position: relative; // Necessary for absolute positioning of ocean.
  display: flex; // Necessary for ordering of content + ocean
  flex-direction: column;

  @media (min-width: $section-breakpoint-xxs)  {
    display: block; // We don't need flex-based positioning at larger sizes. It'll just create problems!
    padding: 10vh 0;
  }
    
  @media (min-width: $section-breakpoint-xs) {
    padding: 12vh 0;
  }

  &--polar { // Polar scene needs additional vertical space for the ocean

    @media (min-width: $section-breakpoint-xxs) {
      padding: 10vh 0 12vh;
    }

    @media (min-width: $section-breakpoint-xs) {
      padding: 12vh 0 18vh;
    }
  }

  &--desert { // Desert needs additional space on top and bottom of the container
    overflow: hidden; // We're defining this so we can push the tree off-screen

    @media (min-width: $section-breakpoint-xs) {
      padding: 18vh 0 12vh;
    }

    &--desert { // Desert needs additional space on top and bottom of the container
      overflow: hidden; // We're defining this so we can push the tree off-screen

      @media (min-width: $section-breakpoint-xs) {
        padding: 18vh 0 12vh;
      }
    }

    &--desert { // Desert needs additional space on top and bottom of the container
      overflow: hidden; // We're defining this so we can push the tree off-screen

      @media (min-width: $section-breakpoint-xs) {
        padding: 18vh 0 12vh;
      }
    }
  }

  &__landscape {
    order: -1; // Push the illustration above the text
    height: 50vh; // At its smallest size, the environment needs a set height. 

    @media (min-width: $section-breakpoint-xxs) {
      height: auto;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      box-sizing: border-box;
    }

    &--ocean {
      background: bottom / 200% repeat-x svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="1424" height="266" viewBox="0 0 1424 266"><path fill="#B1DEDF" fill-rule="nonzero" d="M0 266V0l71 29 35 104 67 55h22l67-70 40 15v25l140 18 28-72 23 2 59 50 34 9 13 30 35 12 52-74V0l34 11 31 77 53 26-25 51 54 25 18-1 18-30 34-146 38 21 67 99 41 81v-38l-11-67 11-32 188 39-40 115 28-12 12-54 70-49 63 75 54-191v266z"/></svg>'),
      $deep-sea;

      @media (min-width: $section-breakpoint-xs) {
        background-size: 85%;
      }
    }

    &--polar {
      // Note: svg-url is a function that takes inline svg code and returns an IE-friendly data URI.
      background: bottom right / contain repeat-x svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="320" height="388" viewBox="0 0 320 388"><g fill="none" fill-rule="nonzero"><path fill="#B5D5E5" d="M0 272h320v116H0z"/><path fill="#FFF" d="M0 0h320v271H0z"/><path fill="#E5F0F6" d="M0 272l22-121 15 70L66 52l28 108 14-71 34 176 18-82 19 82 36-117 28 117 19-57 16 44 24-86 18 106z"/></g></svg>'), $white;
      overflow: hidden;
    }
      
    &--desert {
      // We'll define three different layered backgrounds here for the desert.
      // These backgrounds are layered in this order (first listed background is layered on top):
      // Svg-based clouds, positioned 10% from the top of the screen (Note: the svg itself has additional padding!)
      // Svg-based "hills", positioned 60% from the top of the desert
      // A linear gradient background color with zero color stops (eg, no transition). The gradient is 40% sky and 60% desert.
      // Also note: The svgs are passed to a "svg-url" function, which returns an IE-compatible data URI
      background: 0% 10% / 60% no-repeat svg-url('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 696 241"><defs><style>.cls-1{fill:#a3ccdd;}.cls-2{fill:#fefefe;}</style></defs><title>cloud-box-not-wide</title><g id="Layer_2" data-name="Layer 2"><path id="deep-blue-cloud" class="cls-1" d="M384.67,175a16.84,16.84,0,0,0,.33-3.35A17.36,17.36,0,0,0,355,159.74a17.3,17.3,0,0,0-11.65-5.46,25.16,25.16,0,0,0-30.39-14.74,37.28,37.28,0,0,0-35.23-25.17,37.82,37.82,0,0,0-4.28.27,48.08,48.08,0,0,0-40.4-22,48.73,48.73,0,0,0-8.07.72,56,56,0,0,0-89.72,14.55,41.47,41.47,0,0,0-43.73,67Z"/><path id="white-cloud" class="cls-2" d="M612.58,120.5a11.23,11.23,0,0,0-19.24-9.85,11.21,11.21,0,0,0-7.55-3.54,16.33,16.33,0,0,0-15.13-10.2,16.75,16.75,0,0,0-4.56.65,24.13,24.13,0,0,0-22.81-16.29,23,23,0,0,0-2.77.17,30.88,30.88,0,0,0-31.39-13.78A36.29,36.29,0,0,0,451,77.08a26.87,26.87,0,0,0-28.32,43.42Z"/></g></svg>'), 
      0% 60% / 100% repeat-x svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="1444" height="134" viewBox="0 0 1444 134"><path fill="#DFDCAC" fill-rule="nonzero" d="M1444 133L0 134V1l129 29 50 25h29l145-19L537 3l247 52 279-22 162 22h29l85-43 105-12"/></svg>'), 
      linear-gradient(0deg, $sand 40%, #E5F0F6 40%); // Make the sky vertically take up 40% of the environment

      @media (min-width: $section-breakpoint-xxs) {
        background-position: 100% 5%, 0% 60%, center; // Remove additional padding on the clouds. They'll still have the padding defined in the svg itself.
        background-size: 50%, 60%, 100%; // Make the clouds smaller if there's enough real estate for the tree to take up more space
      }

      @media (min-width: $section-breakpoint-xs) {
        background-position: top left, 0% 60%, center; // Remove additional padding on the clouds. They'll still have the padding defined in the svg itself.
        background-size: 50%, 60%, 100%; // Make the clouds smaller if there's enough real estate for the tree to take up more space
      }

      @media (min-width: $section-breakpoint-md) {
        background-size: 30%, 60%, 100%; // Make the clouds even smaller
      }
    }
  }

  &__story {
    align-self: center; // Center the text block at mobile sizes, when flexbox is active
    background: $white;
    width: 85%;
    padding: 1.125rem 2.25rem; 
    box-sizing: border-box;
    position: relative; // Necessary only for z-index positioning
    z-index: $z-index-1;

    @media (min-width: $section-breakpoint-xxs) {
      width: 50%;
      padding: 2.5rem 2.75rem;
    }

    @media (min-width: $section-breakpoint-xs) {
      width: 60%;
      max-width: 32rem;
    }

    @media (min-width: $section-breakpoint-lg) {
      padding: 3rem;
    }

    &--polar {
      background: $muted-sky;
    }
  }

  &__heading {
    font-family: $heading;
    font-weight: bold;
    font-size: 1.5rem;
    text-transform: uppercase;
    margin: 0;
    padding: 0;
    text-align: center;

    @media (min-width: $section-breakpoint-xxs) {
      text-align: left;
    }

    @media (min-width: $section-breakpoint-xs) {
      font-size: 3.8vw; // 24px / 624x = .038461538 Move the decimal point for vw measurement.
    }

    @media (min-width: $section-breakpoint-sm) {
      text-align: left; // Align text left once floated to the right of the image
    }

    @media (min-width: $section-breakpoint-xl) {
      font-size: 3.25rem; // Set a max font-size
    }

    &--emphasis {
      font-size: 2.25rem;
      font-family: $heading-emphasis;
      display: block;

      @media (min-width: $section-breakpoint-xxs) {
        font-size: 6.7vw; // 24px / 480px = .066666667
      }

      @media (min-width: $section-breakpoint-sm) {
        font-size: 5.9vw; // 42px / 704px = .059659091. Move the decimal point for the viewport width.
      }

      @media (min-width: $section-breakpoint-lg) {
        font-size: 4.37rem; // Set a max font size
      }
    }
  }

  &__text {
    font-size: 1rem;
    line-height: 1.5;
    margin: 1rem 0 0;

    @media (min-width: $section-breakpoint-xs) {
      font-size: 1.125rem;
    }

    @media (min-width: $section-breakpoint-sm) {
      font-size: 1.3125rem;
    }
  }
}